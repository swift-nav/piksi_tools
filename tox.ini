[tox]
envlist = py27,py35,py37
minversion = 2.0

[testenv]
deps = -r{toxinidir}/requirements.txt
commands = py.test -v --ignore=tests/test_console.py tests/
sitepackages = False
usedevelop = True

[testenv:gui27]
basepython=python2.7
passenv = TOXENV DISPLAY HOME
whitelist_externals = bash
commands = 
           # hack since enable is not packaged correctly
           pip install -r{toxinidir}/requirements_gui.txt
           # hack since pyqt is not packaged correctly
           bash tasks/copy_pyqt_to_venv.sh
           py.test -vs tests/test_console.py

[testenv:gui35]
basepython=python3.5
passenv = TOXENV DISPLAY HOME
whitelist_externals = bash
commands =  
           # hack since enable is not packaged correctly
           pip install -r{toxinidir}/requirements_gui.txt
           # hack since pyqt is not packaged correctly
           bash tasks/copy_pyqt_to_venv.sh
           py.test -vs tests/test_console.py

[testenv:flake8]
deps = flake8
commands = flake8 piksi_tools

[flake8]
# W504: ignore one of either 503 or 504
# W605: Deprecation warning - will be relevant in python 3.7+
extend-ignore = W504,W605

[testenv:pyinstaller-linux]
basepython = python3.5

# since we want _version.py to be generated by setuptools_scm
usedevelop = True
deps = -rrequirements.txt
       pyinstaller==3.4
whitelist_externals = bash
commands = 
        # hack since enable is not packaged correctly
        pip install -r requirements_gui.txt
        # hack since pyqt is not packaged correctly
        bash tasks/copy_pyqt_to_venv.sh
        # since older pyserial has issues on ubuntu 16.04
        pip install pyserial==3.4
        pyinstaller --log-level WARN -y misc/console.spec


[testenv:pyinstaller-win]
basepython = python2.7

# since we want _version.py to be generated by setuptools_scm
usedevelop = True
deps = -rrequirements.txt
       pyinstaller==3.4
       pyside==1.2.4
       pypiwin32==219

commands = 
        # hack since enable is not packaged correctly
        pip install -r requirements_gui.txt
        pyinstaller --log-level WARN -y misc/console.spec

[testenv:pyinstaller-macos]
basepython = python2.7

# since we want _version.py to be generated by setuptools_scm
usedevelop = True
deps = -rrequirements.txt
       pyinstaller==3.4
       pyside==1.2.2

commands = 
        python misc/hacks/pyside_postinstall.py -install
        # hack since enable is not packaged correctly
        pip install -r requirements_gui.txt
        pyinstaller --log-level WARN -y misc/console.spec

[testenv:pyinstaller_cmdline_tools-py35]
basepython = python3.5

# since we want _version.py to be generated by setuptools_scm
usedevelop = True
deps = -rrequirements.txt
       pyinstaller==3.4
commands = 
       pyinstaller --onefile --distpath ./dist/cmd_line piksi_tools/serial_link.py
       pyinstaller --onefile --distpath ./dist/cmd_line piksi_tools/settings.py
       pyinstaller --onefile --distpath ./dist/cmd_line piksi_tools/fileio.py
       pyinstaller --onefile --distpath ./dist/cmd_line piksi_tools/bootload_v3.py

[testenv:pyinstaller_cmdline_tools]
basepython = python2.7

# since we want _version.py to be generated by setuptools_scm
usedevelop = True
deps = -rrequirements.txt
       pyinstaller==3.4
commands = 
       pyinstaller --log-level WARN --onefile --distpath ./dist/cmd_line piksi_tools/serial_link.py
       pyinstaller --log-level WARN --onefile --distpath ./dist/cmd_line piksi_tools/settings.py
       pyinstaller --log-level WARN --onefile --distpath ./dist/cmd_line piksi_tools/fileio.py
       pyinstaller --log-level WARN --onefile --distpath ./dist/cmd_line piksi_tools/bootload_v3.py
