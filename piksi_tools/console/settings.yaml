---

- group: surveyed_position
  name: broadcast
  expert: false
  type: boolean
  units:
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Broadcast surveyed base station position.
  Notes: This flag ultimately determines whether the SBP message with identifier
    MSG_BASE_POS_ECEF will be calculated and sent.  Logically, setting this attribute to
    "true" sets the Local receiver as a base station and configures the unit to send
    its surveyed position coordinates to the other receiver(s) with which the base
    station is communicating.  If "true", the remote receiver that receives the
    surveyed position will calculate and communicate a pseudo absolute
    RTK position based upon the received position.

- group: surveyed_position
  name: surveyed_lat
  expert: false
  type: Double
  units: degrees
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Surveyed latitude of the antenna.
  Notes: This setting represents the latitude of the local receiver's antenna, expressed
    in decimal degrees relative to the equator (north = positive, south = negative).
    If surveyed position "broadcast" is set to "true", the coordinate will be
    communicated to remote receivers for use in calculating their pseudo-absolute
    RTK position. The value should be as accurate as possible and should have
    precision to at least 7 digits following the decimal point. For reference,
    1e-7 degrees of latitude is about 1.1 cm on the surface of the earth. Any
    errors in the surveyed position will directly affect the pseudo-absolute
    RTK position measurement reported by the remote receiver.

- group: surveyed_position
  name: surveyed_lon
  expert: false
  type: Double
  units: degrees
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Surveyed longitude of the antenna.
  Notes: This setting represents the longitude of the local receiver's antenna, expressed
    in decimal degrees relative to the Prime Meridian (east = positive, west = negative).
    If surveyed position "broadcast" is set to "true", the coordinate will be
    communicated to remote receivers for use in calculating their pseudo-absolute
    RTK position. The value should be as accurate as possible and should have
    precision to at least 7 digits following the decimal point. For reference,
    1e-7 degrees of longitude at 35 degree latitude is about 1 cm.  Any
    errors in the surveyed position will directly affect the pseudo-absolute
    RTK position measurement reported by the remote receiver.

- group: surveyed_position
  name: surveyed_alt
  expert: false
  type: Double
  units: meters
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Surveyed altitude of the antenna.
  Notes: This setting represents the altitude of the receiver's antenna above the
    WGS84 ellipsoid, in meters. If surveyed position "broadcast" is set to "true",
    this coordinate will be communicated to remote receivers for use in calculating
    their pseudo-absolute position. This value should be precise to 1 cm. Any
    errors in the surveyed position will directly affect the pseudo-absolute
    RTK position measurement reported by the Rover.

- group: frontend
  expert: false
  name: antenna_selection
  type: enum
  units: N/A
  default value: 'Primary'
  readonly: false
  enumerated possible values: Primary,Secondary
  Description: Determines which antenna to use.
  Notes: This setting selects the antenna input that should be used by the receiver.
    Piksi Multi boards and Duro units ship with only a "Primary" antenna connector,
    so this should always be set to "Primary."

- group: frontend
  name: antenna_bias
  expert: false
  type: bool
  units: N/A
  default value: 'True'
  readonly: false
  Description: Enable/Disable 4.85V antenna bias.
  Notes: Most active antennas require an antenna bias in order to power
    the amplifier in the antenna.

- group: sbp
  name: obs_msg_max_size
  expert: true
  type: integer
  units: bytes
  default value: '255'
  readonly: false
  enumerated possible values:
  Description: Determines the maximum message length for raw observation sbp messages.
  Notes: This parameter is useful for tuning observation messages for compatibility
    with radio modems.  Some serial modems will internally split serial packets for
    their protocol and this parameter allows the size of the message to be reduced
    as to prevent the modem from sending multiple packets. If the parameter exceeds
    255 bytes (the maximum size of an SBP message), the receiver firmware will ignore
    the parameter and use 255 bytes.  If the parameter is set smaller than the size
    of one observation, the firmware will ignore the parameter and use the size
    of one observation as the maximum message size.

- group: simulator
  expert: false
  name: enabled
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Toggles the receiver internal simulator on and off.
  Notes: The simulator will provide simulated outputs of a
    stationary base station and the Local receiver moving in a circle around the
    base station. The simulator is intended to aid in system integration by
    providing realistic looking outputs but does not faithfully simulate every
    aspect of device operation.

- group: simulator
  name: base_ecef_x
  expert: false
  type: double
  units: meters
  default value: '-2706098.845'
  readonly: false
  enumerated possible values:
  Description: Simulated base station position.
  Notes: Earth Centered Earth Fixed (ECEF) x position of the simulated base station.

- group: simulator
  name: base_ecef_y
  expert: false
  type: double
  units: meters
  default value: '-4261216.475'
  readonly: false
  enumerated possible values:
  Description: Simulated base station position.
  Notes: Earth Centered Earth Fixed (ECEF) y position of the simulated base station.

- group: simulator
  name: base_ecef_z
  expert: false
  type: double
  units: meters
  default value: '3885597.912'
  readonly: false
  enumerated possible values:
  Description: Simulated base station position.
  Notes: Earth Centered Earth Fixed (ECEF) z position of the simulated base station.

- group: simulator
  name: speed
  expert: false
  type: double
  units: m/s
  default value: '4'
  readonly: false
  enumerated possible values:
  Description: Simulated tangential speed of the receiver.
  Notes:

- group: simulator
  name: radius
  expert: false
  type: double
  units: meters
  default value: '100'
  readonly: false
  enumerated possible values:
  Description: Radius of the circle around which the simulated receiver will move.
  Notes:

- group: simulator
  name: pos_sigma
  expert: false
  type: double
  units: meters^2
  default value: '1.5'
  readonly: false
  enumerated possible values:
  Description: Standard deviation of simulated single point position.
  Notes:

- group: simulator
  name: speed_sigma
  expert: false
  type: double
  units: meters^2/s^2
  default value: '0.15'
  readonly: false
  enumerated possible values:
  Description: Standard deviation of noise addition to simulated tangential speed.
  Notes:

- group: simulator
  name: cn0_sigma
  expert: false
  type: double
  units: dBm-Hz
  default value: '0.3'
  readonly: false
  enumerated possible values:
  Description: Standard deviation of noise added to the simulated signal to noise.
    ratio
  Notes:

- group: simulator
  name: pseudorange_sigma
  expert: false
  type: double
  units: meters
  default value: '4'
  readonly: false
  enumerated possible values:
  Description: Standard deviation of noise added to the simulated pseudo range.
  Notes:

- group: simulator
  name: phase_sigma
  expert: false
  type: double
  units: cycles
  default value: '0.03'
  readonly: false
  enumerated possible values:
  Description: Standard deviation of noise added to the simulated carrier phase.
  Notes:

- group: simulator
  name: num_sats
  expert: false
  type: integer
  units: N/A
  default value: '9'
  readonly: false
  enumerated possible values:
  Description: The number of satellites for the simulator.
  Notes:

- group: simulator
  name: mode_mask
  expert: false
  type: packed bitfield
  units: N/A
  default value: 15 (decimal), 0xF (hexadecimal)
  readonly: false
  enumerated possible values:
  Description: Determines the types of position outputs for the simulator.
  Notes: |
    bit 0 (decimal value 1) turns on single point position PVT simulated outputs
    bit 1 (decimal value 2) turns on the satellite tracking simulated outputs
    bit 2 (decimal value 4) turns on Float IAR simulated RTK outputs
    bit 3 (decimal value 8) turns on Fixed IAR simulated RTK outputs

- group: skylark
  name: enable
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable Skylark client.
  Notes: If True, Skyark client will be used.

- group: skylark
  name: url
  expert: true
  type: string
  units: N/A
  default value: N/A
  readonly: false
  enumerated possible values:
  Description: Skylark URL to use.
  Notes: URL to use with Skylark client. Skylark must be enabled to use this setting.

- group: solution
  name: soln_freq
  expert: false
  type: integer
  units: Hz
  default value: '10'
  readonly: false
  enumerated possible values:
  Description: The frequency at which a position solution is computed.
  Notes:

- group: solution
  name: correction_age_max
  expert: false
  type: float
  units: seconds
  default value: '30'
  readonly: false
  enumerated possible values:
  Description: The maximum age of corrections for which an RTK solution will be generated.
  Notes:

- group: solution
  name: output_every_n_obs
  expert: false
  type: integer
  units: N/A
  default value: '2'
  readonly: false
  enumerated possible values:
  Description: Integer divisor of solution frequency for which the observations will
    be output.
  Notes: For instance, if the solution frequency (soln_freq) is 10 Hz, and the output_every_n_obs
    setting is 10, it means that the observation output will occur at a rate
    of 1 Hz. This parameter is designed to tune the rate at which correction information is passed 
    from one receiver to the other as to efficiently use radio modem bandwidth and fit with user applications.

- group: solution
  name: dgnss_solution_mode
  expert: false
  type: enum
  units: N/A
  default value: 'Low Latency'
  readonly: false
  enumerated possible values: Low Latency, Time Matched, No DGNSS
  Description: Selects the type of RTK solution to output.
  Notes: A "Low Latency" solution uses an internal model of anticipated satellite observations
    to provide RTK output with minimal latency but slightly reduced accuracy. "Low Latency" mode
    assumes that the base station is stationary. For applications where accuracy is desired over timeliness
    or when both receivers are moving, "Time Matched" mode should be chosen. This
    means that the RTK output will require a corresponding set of correction observations
    for each timestamp. When "No DGNSS" is chosen, no differential output will be
    attempted by the receiver.

- group: solution
  name: dgnss_filter
  expert: true
  type: enum
  units: N/A
  default value: 'Fixed'
  readonly: false
  enumerated possible values: Fixed,Float
  Description: Determines the type of carrier phase ambiguity resolution that the receiver will attempt to achieve.
  Notes: If "fixed", the receiver will output a integer fixed ambiguity estimate.  If
    no fixed solution is available, it will revert to the float solution.  If "float",
    the device will only output the float ambiguity estimate.
    This settings is not used by Piksi Multi and Duro.

- group: solution
  name: known_baseline_n
  expert: false
  type: double
  units: meters
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: This sets the number of meters that the rover is North from the
    base station when the "init known baseline" feature is used.

- group: solution
  name: known_baseline_e
  expert: false
  type: double
  units: meters
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: This sets the number of meters that the rover is East from the
    base station when the "init known baseline" feature is used.

- group: solution
  name: known_baseline_d
  expert: false
  type: double
  units: meters
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: This sets the number of meters that the rover is Down from the
    base station when the "init known baseline" feature is used.

- group: solution
  name: elevation_mask
  expert: false
  type: float
  units: degrees
  default value: '10'
  readonly: false
  enumerated possible values:
  Description: SPP / RTK solution elevation mask.
  Notes: Satellites must be above the horizon by at least this angle before they
    will be used in a solution.

- group: solution
  name: disable_raim
  expert: true
  type: boolean
  units:
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Receiver Autonomous Integrity Monitoring.
  Notes: If True, RAIM checks will not be performed.

- group: solution
  name: send_heading
  expert: False
  type: boolean
  units:  N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: |
    Enables SBP heading output.
    Heading is calculated from base station to rover and represents
    the inverse tangent of the north and east components of the baseline.
  Notes: |
    No smoothing or additional processing is provided to improve heading output.
    The heading feature requires the following additional settings
        Time Matched Mode
        Equal Observation rate between both base and rover
    The observation rate will also determine the heading output rate and is defined as "soln freq" / "output every n obs"

- group: solution
  name: heading_offset
  expert: False
  type: double
  units:  degrees
  default value: '0.0'
  readonly: false
  enumerated possible values: N/A
  Description: Rotate the heading output.
  Notes: |
    Adds an offset to the heading output to rotate the heading vector to align the
    baseline heading with a desired 0 heading. Valid values are -180.0 to 180.0 degrees

- group: solution
  name: disable_klobuchar_correction
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Disable Klobuchar ionospheric corrections.
  Notes: If True, Klobuchar ionospheric corrections will not be applied.

- group: solution
  name: enable_glonass
  expert: false
  type: boolean
  units: N/A
  default value: 'True'
  readonly: false
  enumerated possible values: True,False
  Description: Enable GLONASS measurement processing in the navigation filter.
  Notes: If set to True, GLONASS measurements are processed in the navigation filter for SPP and RTK.
  
- group: system_info
  name: serial_number
  expert: False
  type: integer
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: The serial number of the receiver.
  Notes: This number should match the number on the barcode on the board and cannot be modified.

- group: system_info
  name: mac_address
  expert: False
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: The MAC address of the receiver.
  Notes: This is a read only setting.

- group: system_info
  name: uuid
  expert: False
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: The UUID of the receiver.
  Notes: The UUID is a Universally Unique IDentifier for this receiver.
    The lower 16 bits of the UUID are used for the SBP Sender ID. This is a read only setting.

- group: system_info
  name: firmware_version
  expert: False
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: Firmware version of the receiver.
  Notes: The git hash is removed from this version identifier. This is a read only setting.

- group: system_info
  name: hw_revision
  expert: False
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: Hardware revision of the receiver.
  Notes: This is a read only setting that refers to the product family of the hardware.

- group: system_info
  name: hw_version
  expert: True
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: Hardware version number.
  Notes: This is a read only setting that corresponds to the version number printed on the oem module hardware version sticker.

- group: system_info
  name: firmware_build_id
  expert: False
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: Full build id for firmware version.
  Notes: For user generated images, this will appear
    the same as the command "git describe --dirty". This is a read only setting.

- group: system_info
  name: firmware_build_date
  expert: False
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: firmware build date.
  Notes: This is a read only setting.

- group: system_info
  name: loader_build_id
  expert: true
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: build id for loader (uboot).
  Notes: This is a read only setting

- group: system_info
  name: loader_build_date
  expert: true
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: build date for boot loader (uboot).
  Notes: This is a read only setting.

- group: system_info
  name: nap_build_id
  expert: true
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: build id for SwiftNap FPGA bitstream.
  Notes: This is a read only setting.

- group: system_info
  name: nap_build_date
  expert: true
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: build date for SwiftNap FPGA bitstream.
  Notes: This is a read only setting.

- group: system_info
  name: pfwp_build_id
  expert: true
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: build id for real-time GNSS firmware (piksi_firmware).
  Notes: This is a read only setting.

- group: system_info
  name: pfwp_build_date
  expert: true
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: build date for real-time GNSS firmware (piksi_firmware).
  Notes: This is a read only setting.

- group: system_info
  name: sbp_sender_id
  expert: false
  type: string
  units: N/A
  default value: N/A
  readonly: True
  enumerated possible values:
  Description: The SBP sender ID for any messages sent by the device.
  Notes: ID value is equal to the lower 16 bits of the UUID. This is a read only setting.

- group: system_info
  name: nap_channels
  expert: true
  type: string
  units: N/A
  default value: '40'
  readonly: True
  enumerated possible values:
  Description: Number of channels in SwiftNap FPGA.
  Notes: This is a read only setting.

- group: system_monitor
  name: heartbeat_period_milliseconds
  expert: true 
  type: integer
  units: ms
  default value: '1000'
  readonly: false
  enumerated possible values:
  Description: Period for sending the SBP_HEARTBEAT messages.
  Notes:

- group: system_monitor
  name: spectrum_analyzer
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable spectrum analyzer.
  Notes: This setting enables the on-device spectrum analyzer and associated SBP output.
    The spectrum analyzer is available from the "Advanced" tab of the console.

- group: system_monitor
  name: watchdog
  expert: true
  type: boolean
  units: N/A
  default value: 'True'
  readonly: false
  enumerated possible values: True,False
  Description: Enable hardware watchdog timer to reset the receiver if it locks up for.
    any reason
  Notes: You must reset the receiver for this change to take effect.

- group: udp_client0
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'Disabled'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for UDP client 0.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: udp_client0
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: udp_client0
  name: address
  expert: false
  type: string
  units: N/A
  default value: ''
  readonly: false
  Description: IP address for UDP client 0.
  Notes: The address setting is defined according to the convention "hostname:port".
     For example, it should match the format 192.168.0.222:55555 or xxxxx.net:2101 .

- group: udp_client1
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'Disabled'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for UDP client 1.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: udp_client1
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: udp_client1
  name: address
  expert: false
  type: string
  units: N/A
  default value: ''
  readonly: false
  Description: IP address for UDP client 1.
  Notes: The address setting is defined according to the convention "hostname:port".
     For example, it should match the format 192.168.0.222:55555 or xxxxx.net:2101 .

- group: udp_server0
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'SBP (Swift Binary Protocol)'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for UDP server 0.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: udp_server0
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: udp_server0
  name: port
  expert: false
  type: integer
  units: N/A
  default value: '55557'
  readonly: false
  Description: Port for UDP server 0.
  Notes:

- group: udp_server1
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'SBP (Swift Binary Protocol)'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for UDP server 1.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: udp_server1
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: udp_server1
  name: port
  expert: false
  type: integer
  units: N/A
  default value: '55558'
  readonly: false
  Description: Port for UDP server 1.
  Notes:


- group: usb0
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For uart1,
    the default value is optimal for logging and communication with the console.

- group: usb0
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'SBP (Swift Binary Protocol)'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for USB0.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: uart1
  name: baudrate
  expert: false
  type: integer
  units: bps
  default value: '115200'
  readonly: false
  enumerated possible values:
  Description: The Baud rate for the UART 1.
  Notes:

- group: uart1
  name: flow_control
  expert: false
  type: enum
  units: NA
  default value: 'None'
  readonly: false
  enumerated possible values: None,RTS/CTS
  Description: Enable hardware flow control (RTS/CTS).
  Notes:

- group: uart1
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'SBP (Swift Binary Protocol)'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for UART 1.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: uart1
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: '23,29,65,72,74,80,117,134,136,144,163,165,166, 167,171,181,185,187,188,257,258,259,520,522,524, 526,527,528,1025,2304,2305,2306,65280,65282,65535'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For uart1,
    the default value is optimal for logging and communication with the console.

- group: uart0
  name: baudrate
  expert: false
  type: integer
  units: bps
  default value: '115200'
  readonly: false
  enumerated possible values:
  Description: The Baud rate for the UART 0.
  Notes:

- group: uart0
  name: flow_control
  expert: false
  type: boolean
  units: NA
  default value: 'None'
  readonly: false
  enumerated possible values: None,RTS/CTS
  Description: Enable hardware flow control (RTS/CTS).
  Notes:

- group: uart0
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'SBP (Swift Binary Protocol)'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for UART0.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: uart0
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: '72,74,65535'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For uart1,
    the default value is optimal for logging and communication with the console.

- group: ext_events_0
  name: edge_trigger
  expert: false
  type: enum
  units: N/A
  default value: None
  readonly: false
  enumerated possible values: None,Rising,Falling,Both
  Description: Select edges to trigger timestamped event capture.
  Notes: You can use this to record the exact time that some external
    event in your system occurred, e.g. camera shutter time.  Upon
    detecting the event, receiver will generate a MSG_EXT_EVENT message
    reporting the event, including a timestamp accurate to better than
    a microsecond.

- group: ext_events_0
  name: sensitivity
  expert: false
  type: integer
  units: us (microseconds)
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Minimum time between events (0 = disabled).
  Notes: Any event that is triggered within the sensitivity window after the previous event will be ignored and no MSG_EXT_EVENT will be generated.

- group: ext_events_1
  name: edge_trigger
  expert: true
  type: enum
  units: N/A
  default value: None
  readonly: false
  enumerated possible values: None,Rising,Falling,Both
  Description: Duro only. Select edges to trigger timestamped event capture.
  Notes: You can use this to record the exact time that some external
    event in your system occurred, e.g. camera shutter time.  Upon
    detecting the event, receiver will generate a MSG_EXT_EVENT message
    reporting the event, including a timestamp accurate to better than
    a microsecond.

- group: ext_events_1
  name: sensitivity
  expert: true
  type: integer
  units: us (microseconds)
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Duro only. Minimum time between events (0 = disabled).
  Notes: Any event that is triggered within the sensitivity window after the previous event will be ignored and no MSG_EXT_EVENT will be generated.

- group: ext_events_2
  name: edge_trigger
  expert: true
  type: enum
  units: N/A
  default value: None
  readonly: false
  enumerated possible values: None,Rising,Falling,Both
  Description: Duro only. Select edges to trigger timestamped event capture.
  Notes: You can use this to record the exact time that some external
    event in your system occurred, e.g. camera shutter time.  Upon
    detecting the event, receiver will generate a MSG_EXT_EVENT message
    reporting the event, including a timestamp accurate to better than
    a microsecond.

- group: ext_events_2
  name: sensitivity
  expert: true
  type: integer
  units: us (microseconds)
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Duro only. Minimum time between events (0 = disabled).
  Notes: Any event that is triggered within the sensitivity window after the previous event will be ignored and no MSG_EXT_EVENT will be generated.

- group: track
  name: elevation_mask
  expert: true
  type: float
  units: degrees
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Tracking elevation mask.
  Notes: Satellites must be above the horizon by at least this angle before they
    will be tracked.

- group: solution
  name: glonass_measurement_std_downweight_factor
  expert: true
  type: float
  units: N/A
  default value: '4.0'
  readonly: false
  enumerated possible values:
  Description: Down weights GLONASS measurements by a given factor in the navigation filter.
  Notes: This parameter down weights GLONASS observations relative to GPS observations by this factor.

- group: track
  name: send_trk_detailed
  expert: true
  type: boolean
  default value: false
  readonly: false
  Description: send detailed tracking state message.
  Notes:

- group: track
  name: iq_output_mask
  expert: true
  type: integer
  units: N/A
  default value: 0
  readonly: false
  enumerated possible values:
  Description: Output raw I/Q correlations.
  Notes: Bitmask of channel IDs (not PRNs)

- group: track
  name: max_pll_integration_time_ms
  expert: true
  type: integer
  units: N/A
  default value: '20'
  readonly: false
  enumerated possible values:
  Description: Controls maximum possible integration time for a measurement.
  Notes: This can be used to configure the sensitivity and dynamic tracking modes permitted to be used by receiver.
     Lower values provide lower sensitivity and noisier phase measurements but better performance in dynamic conditions.

- group: cn0_est
  name: alpha
  expert: true
  Description: cn0 estimation parameter.
  readonly: false

- group: cn0_est
  name: nbw
  expert: true
  Description: cn0 estimation parameter.
  readonly: false

- group: cn0_est
  name: scale
  expert: true
  Description: cn0 estimation parameter.
  readonly: false

- group: cn0_est
  name: cn0 shift
  expert: true
  Description: cn0 estimation parameter.
  readonly: false

- group: cn0_est
  name: cn0_shift
  expert: true
  Description: cn0 estimation parameter.
  readonly: false

- group: cn0_est
  name: cutoff
  expert: true
  Description: cn0 cutoff.
  readonly: false

- group: cn0_est
  name: pri2sec_threshold
  type: float
  expert: true
  Description: Cn0 threshold to transition to 2nd stage tracking.
  readonly: false

- group: cn0_est
  name: sec2pri_threshold
  type: float
  expert: true
  Description: Cn0 threshold to transition to out of 2nd stage tracking.
  readonly: false

- group: l1ca_track
  name: show_unconfirmed
  expert: true
  type: boolean
  Description: Show unconfirmed tracking channels in tracking state.
  readonly: false

- group: l1ca_track
  name: xcorr_cof
  expert: true
  type: float
  Description: cross correlation coefficient.
  readonly: false

- group: l1ca_track
  name: xcorr_delta
  expert: true
  type: float
  Description: cross correlation delta.
  readonly: false

- group: l1ca_track
  name: xcorr_time
  expert: true
  type: float
  Description: cross correlation time.
  readonly: false

- group: glo_l1of_track
  name: show_unconfirmed
  expert: true
  type: boolean
  Description: Show unconfirmed tracking channels in tracking state.
  readonly: false

- group: glo_l1of_track
  name: xcorr_cof
  expert: true
  type: float
  Description: cross correlation coefficient.
  readonly: false

- group: glo_l1of_track
  name: xcorr_delta
  expert: true
  type: float
  Description: cross correlation delta.
  readonly: false

- group: glo_l1of_track
  name: xcorr_time
  expert: true
  type: float
  Description: cross correlation time.
  readonly: false

- group: l2c_track
  name: xcorr_cof
  expert: true
  type: float
  Description: cross correlation coefficient.
  readonly: false

- group: l2c_track
  name: xcorr_delta
  expert: true
  type: float
  Description: cross correlation delta.
  readonly: false

- group: l2c_track
  name: xcorr_time
  expert: true
  type: float
  Description: cross correlation time.
  readonly: false

- group: l2c_track
  name: show_unconfirmed
  expert: true
  type: bool
  Description: Show unconfirmed tracking channels in tracking state.
  readonly: false

- group: glo_l2of_track
  name: show_unconfirmed
  expert: true
  type: boolean
  Description: Show unconfirmed tracking channels in tracking state.
  readonly: false

- group: glo_l2of_track
  name: xcorr_cof
  expert: true
  type: float
  Description: cross correlation coefficient.
  readonly: false

- group: glo_l2of_track
  name: xcorr_delta
  expert: true
  type: float
  Description: cross correlation delta.
  readonly: false

- group: glo_l2of_track
  name: xcorr_time
  expert: true
  type: float
  Description: cross correlation time.
  readonly: false

- group: nmea
  name: gpgsv_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '10'
  readonly: false
  Description: Number of Solution Periods between GSV NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gpgga_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '1'
  readonly: false
  Description: Number of Solution Periods between GGA NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gphdt_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '1'
  readonly: false
  Description: Number of Solution Periods between HDT NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gprmc_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '10'
  readonly: false
  Description: Number of Solution Periods between RMC NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gpvtg_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '1'
  readonly: false
  Description: Number of Solution Periods between VTG NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gpgll_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '10'
  readonly: false
  Description: Number of Solution Periods between GLL NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gpzda_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '10'
  readonly: false
  enumerated possible values:
  Description: Number of Solution Periods between ZDA NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gsa_msg_rate
  expert: false
  type: integer
  units: Solution Periods
  default value: '10'
  readonly: false
  enumerated possible values:
  Description: Number of Solution Periods between GSA NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10 Hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5 Hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gpgsa_msg_rate
  expert: false
  type: integer
  units: Solution Period
  default value: '10'
  readonly: false
  enumerated possible values:
  Description: Number of Solution Periods between GSA NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message.

- group: ntrip
  name: enable
  expert: false
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable NTRIP client. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.
  Notes: If True, NTRIP client will be used.

- group: ntrip
  name: username
  expert: false
  type: string
  units: N/A
  default value: N/A
  readonly: false
  enumerated possible values:
  Description: NTRIP username to use. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.
  Notes: Username to use with NTRIP client. NTRIP must be enabled to use this setting.

- group: ntrip
  name: password
  expert: false
  type: string
  units: N/A
  default value: N/A
  readonly: false
  enumerated possible values:
  Description: NTRIP password to use. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.
  Notes: Password to use with NTRIP client. NTRIP must be enabled to use this setting.

- group: ntrip
  name: url
  expert: false
  type: string
  units: N/A
  default value: N/A
  readonly: false
  enumerated possible values:
  Description: NTRIP URL to use. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.
  Notes: URL to use with NTRIP client. NTRIP must be enabled to use this setting.
    URLs should be HTTP URLs with a port, and a mountpoint path such as example.com:2101/BAZ_RTCM3.

- group: ntrip
  name: debug
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  Description: Additional debug messages for NTRIP (sent to /var/log/messages).

- group: ntrip
  name: gga_out_interval
  expert: true
  type: integer
  units: seconds
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Interval at which the NMEA GGA sentence is uploaded to the NTRIP server
  Notes: The interval (in seconds) at which the NMEA GGA sentence is uploaded to
     the specified NTRIP server.  The default of 0 disables the GGA sentence upload.

- group: pps
  name: width
  expert: false
  type: integer
  units: us (microseconds)
  default value: '200000'
  readonly: false
  enumerated possible values:
  Description: Number of microseconds the PPS will remain active (allowed range from 1 to 999999 us).
  Notes:

- group: pps
  name: polarity
  expert: false
  type: integer
  units: Logic Level
  default value: '1'
  readonly: false
  enumerated possible values: 0, 1
  Description: Logic level on output pin when the PPS is active.
  Notes:

- group: pps
  name: offset
  expert: false
  type: integer
  units: us (microseconds)
  default value: '0'
  readonly: false
  enumerated possible values:
  Description: Offset in microseconds between GPS time and the PPS.
  Notes:

- group: pps
  name: frequency
  expert: false
  type: double
  units: Hz
  default value: '1.0'
  readonly: false
  enumerated possible values:
  Description: Generate a pulse with the given frequency (maximum = 20 Hz).
  Notes:

- group: acquisition
  name: sbas_enabled
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable the SBAS constellation.
  Notes:

- group: acquisition
  name: sbas_acquisition_enabled
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable the SBAS constellation.
  Notes:

- group: acquisition
  name: bds2_acquisition_enabled
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable the bds2 constellation.
  Notes:

- group: acquisition
  name: qzss_acquisition_enabled
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable the QZSS constellation.
  Notes:

- group: acquisition
  name: glonass_acquisition_enabled
  expert: false
  type: boolean
  units: N/A
  default value: 'True'
  readonly: false
  enumerated possible values: True,False
  Description: Enable the GLONASS acquisition and raw measurements.
  Notes: This is a precondition for navigation with GLONASS.

- group: acquisition
  name: almanacs_enabled
  expert: true
  type: boolean
  units: N/A
  default value: 'False'
  readonly: false
  enumerated possible values: True,False
  Description: Enable the almanac-based acquisition.
  Notes:

- group: ethernet
  name: ip_config_mode
  expert: false
  type: enum
  enumerated possible values: Static,DHCP
  units: N/A
  default value: 'Static'
  readonly: false
  Description: Ethernet configuration mode.
  Notes: If DHCP is chosen the IP address will be assigned automatically. The DHCP assigned IP address cannot be viewed under the Settings tab, instead use the Advanced Tab and click on 'Refresh Network Status'.

- group: ethernet
  name: ip_address
  expert: false
  type: string
  units: N/A
  default value: '192.168.0.222'
  readonly: false
  Description: The static IP address.
  Notes: The configured IP address in XXX.XXX.XXX.XXX format.

- group: ethernet
  name: netmask
  expert: false
  type: string
  units: N/A
  default value: '255.255.255.0'
  readonly: false
  Description: The netmask for the IP config.
  Notes: The configured netmask in XXX.XXX.XXX.XXX format.

- group: ethernet
  name: gateway
  expert: false
  type: string
  units: N/A
  default value: '192.168.0.1'
  readonly: false
  Description: The default gateway for the IP config.
  Notes: The configured gateway in XXX.XXX.XXX.XXX format.

- group: cell_modem
  name: modem_type
  expert: true
  type: enum
  enumerated possible values: GSM,CDMA
  default value: 'GSM'
  readonly: false
  Description: The type of cell modem in use.

- group: cell_modem
  name: debug
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  Description: Additional debug messages for cell modem.

- group: tcp_server0
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'SBP (Swift Binary Protocol)'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for TCP server 0.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.


- group: tcp_server0
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: tcp_server0
  name: port
  expert: false
  type: integer
  units: N/A
  default value: '55555'
  readonly: false
  Description: Port for TCP server 0.
  Notes:

- group: tcp_server1
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'SBP (Swift Binary Protocol)'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for TCP server 1.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: tcp_server1
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: tcp_server1
  name: port
  expert: false
  type: integer
  units: N/A
  default value: '55556'
  readonly: false
  Description: Port for TCP server 1.
  Notes:

- group: tcp_client0
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'Disabled'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for TCP client 0.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: tcp_client0
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: tcp_client0
  name: address
  expert: false
  type: string
  units: N/A
  default value: ''
  readonly: false
  Description: IP address and port for TCP client 0 to connect to.
  Notes: The address setting is defined according to the convention "hostname:port".
     For example, it should match the format 192.168.0.222:55555 or xxxxx.net:2101 .

- group: tcp_client1
  name: mode
  expert: false
  type: enum
  units: N/A
  default value: 'Disabled'
  readonly: false
  enumerated possible values: SBP,NMEA OUT,RTCMv3 IN
  Description: Communication protocol for TCP client 1.
  Notes: |
    "SBP" configures the interface to transmit messages specified in the 'enabled_sbp_messages' setting and to receive incoming SBP messages. If the mode is changed from SBP the console will no longer be able to communicate over the interface.

    "NMEA OUT" configures the interface to transmit the GGA, RMC, GGL, VTG, ZDA, GSA, and GSV NMEA 0183 messages. The interface will not receive incoming messages.

    "RTCMv3.1 IN" configures the interface to receive RTK corrections in RTCM format. The interface will receive 1002, 1004, 1005, 1006, 1010, 1012, 1033 and 1230 RTCMv3.1 messages and will not transmit or receive any other messages.

- group: tcp_client1
  name: enabled_sbp_messages
  expert: false
  type: string
  units: N/A
  default value: 'blank - all messages are enabled'
  readonly: false
  Description: Configure which messages should be sent on the port.
  Notes: The enabled sbp messages settings is a list of message types
    and rate divisors that will be sent out of the interface. If left blank, all
    messages will be sent. If not blank, a comma separated list of
    SBP message IDs in base 10 integer format should be provided.  Optionally,
    a divisor can be specified after the / character for each id.  For example, an entry of
    3456/10 would provide message with ID 3456 at 1/10th the normal rate.  For Ethernet,
    the default value is optimal for logging and communication with the console.

- group: tcp_client1
  name: address
  expert: false
  type: string
  units: N/A
  default value: ''
  readonly: false
  Description: IP address and port for TCP client 1 to connect to.
  Notes: The address setting is defined according to the convention "hostname:port".
     For example, it should match the format 192.168.0.222:55555 or xxxxx.net:2101 .

- group: imu
  name: imu_raw_output
  expert: false
  type: boolean
  default value: 'False'
  readonly: false
  Description: Enable/Disable IMU raw data output from onboard Bosch BMI160 IMU.
  Notes:  The IMU raw data can be seen in the Advanced Tab of the Swift Console

- group: imu
  name: imu_rate
  expert: false
  type: enum
  default value: '50'
  readonly: false
  enumerated possible values: 25,50,100,200
  units: Hz
  Description: The data rate (in Hz) for IMU raw output.
  Notes: It is recommended to use Ethernet or USB for IMU data output
    for data rates over 25 Hz.

- group: imu
  name: acc_range
  expert: false
  type: enum
  default value: '8'
  readonly: false
  enumerated possible values: 2,4,8,16
  units: g
  Description: The approximate range of accelerations that can be measured.
  Notes: When 2 g is chosen, it means the accelerometer is scaled to measure
    about +/- 2 g of acceleration. Refer to the IMU datasheet for detailed information.

- group: imu
  name: gyro_range
  expert: false
  type: enum
  default value: '1000'
  readonly: false
  enumerated possible values: 125,250,500,1000,2000
  units: deg/s
  Description: The approximate range of angular rate that can be measured.
  Notes: When 125 is chosen, it means the gyro is scaled to measure
    about +/- 125 deg/s of angular rate. Refer to the IMU datasheet for detailed information.

- group: imu
  name: mag_raw_output
  expert: false
  type: boolean
  default value: 'False'
  readonly: false
  Description: Enable/Disable raw data output from onboard Bosch BMM150 Magnetometer.
  Notes:  The magnetometer raw data can be seen in the Advanced Tab of the Swift Console.

- group: imu
  name: mag_rate
  expert: false
  type: enum
  default value: '12.5'
  readonly: false
  enumerated possible values: 6.25,12.5,25
  units: Hz
  Description: The data rate (in Hz) for magnetometer raw output.

- group: ndb
  name: erase_ephemeris
  expert: true
  type: boolean
  default value: 'True'
  readonly: false
  Description: Erase stored ephmerides during boot.

- group: ndb
  name: erase_almanac
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  Description: Erase stored almanacs during boot.

- group: ndb
  name: erase_almanac_wn
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  Description: Erase stored almanac week numbers during boot.

- group: ndb
  name: erase_iono
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  Description: Erase stored ionospheric parameters during boot.

- group: ndb
  name: erase_lgf
  expert: true
  type: boolean
  default value: 'True'
  readonly: false
  Description: Erase stored last fix information during boot.

- group: ndb
  name: erase_l2c_capb
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  Description: Erase stored L2C capability mask during boot.

- group: ndb
  name: erase_utc_params
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  Description: Erase stored UTC offset parameters during boot.

- group: ndb
  name: lgf_update_s
  expert: true
  type: int
  default value: '1800'
  readonly: false
  units: seconds
  Description: Update period for navigation database last good fix.

- group: ndb
  name: lgf_update_m
  expert: true
  type: int
  default value: '10000'
  readonly: false
  units: meters
  Description: Change in position required to update last good fix.

- group: ndb
  name: valid_alm_days
  expert: true
  type: int
  default value: '6'
  readonly: false
  units: days
  Description: Number of days for which Almanac is valid.

- group: ndb
  name: valid_eph_acc
  expert: true
  type: int
  default value: '100'
  readonly: false
  units: meters

- group: ndb
  name: valid_alm_acc
  expert: true
  type: int
  default value: '5000'
  readonly: false
  units: meters

- group: cell_modem
  name: enable
  expert: true
  type: boolean
  default value: 'False'
  readonly: false
  units: N/A

- group: cell_modem
  name: device
  expert: true
  type: string
  default value: 'ttyACM0'
  readonly: false
  units: N/A

- group: cell_modem
  name: APN
  expert: true
  type: string
  default value: INTERNET
  readonly: false
  Description: Access point name (provided by cell carrier).
  units: N/A

- group: standalone_logging
  name: file_duration
  expert: false
  type: int
  default value: '10'
  readonly: false
  Description: Duration of each logfile.
  units: minutes
  Notes: Sets the number of minutes to output to each standalone log file before opening the next one.
         If this setting is changed while logging is enabled, it will go into effect immediately which will close the current file if its length exceeds the new duration.

- group: standalone_logging
  name: max_fill
  expert: false
  type: int
  default value: '95'
  readonly: false
  Description: Maximum storage device usage.
  units: percent
  Notes: Sets a limit on how full the storage device can be before logging is stopped. If the drive is more than this percent full, no new log files will be created and a warning will be logged every 30 seconds.
         If this setting is changed while logging is enabled, it will go into effect on the next file that’s created.

- group: standalone_logging
  name: output_directory
  expert: false
  type: string
  default value: '/media/sda1/'
  readonly: false
  Description: Standalone logging path.
  units: N/A
  Notes: Sets the paths in which to write logs. A warning will be logged every 30 seconds if this path is invalid or unavailable. The system will not create a folder that does not exist.
         If this setting is changed while logging is enabled, it will go into effect on the next file that’s created.

- group: standalone_logging
  name: enable
  type: boolean
  expert: false
  default value: 'False'
  readonly: false
  Description: Standalone logging enabled.
  units: N/A
  Notes: Setting this to true triggers the logger to start trying to write logs to the output_directory.
         Setting this to false will immediately close the current file and stop logging.
         Reenabling logging will increment the session counter which is reflected in the log file names (see USB Logging File Output section).
