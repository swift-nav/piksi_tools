---

- group: surveyed_position
  name: broadcast
  type: boolean
  units:
  default value: 'false'
  enumerated possible values: true,false
  Description: Broadcast surveyed base station location
  Notes: This flag ultimately determines whether the SBP message with identifier
    MSG_BASE_POS_ECEF will be calculated and sent.  Logically, setting this attribute to
    "true" sets the Local Piksi as a base station and configures the unit to send
    its surveyed location coordinates to the other Piksi(s) with which the base
    station is communicating.  If "true", the remote Piksi that receives the
    surveyed position will calculate and communicate a pseudo absolute
    RTK position based upon the received position.

- group: surveyed_position
  name: surveyed_lat
  type: Double
  units: degrees
  default value: '0'
  enumerated possible values:
  Description: "Surveyed latitude of the Piksi's antenna"
  Notes: This setting represents the latitude of the local Piksi's antenna, expressed
    in decimal degrees relative to the equator (north = positive, south = negative).
    If surveyed position "broadcast" is set to "true", the coordinate will be
    communicated to remote Piksis for use in calculating their pseudo-absolute
    RTK position. The value should be as accurate as possible and should have
    precision to at least 7 digits following the decimal point. For reference,
    1e-7 degrees of latitude is about 1.1 cm on the surface of the earth. Any
    errors in the surveyed position will directly affect the pseudo-absolute
    RTK position measurement reported by the remote Piksi.

- group: surveyed_position
  name: surveyed_lon
  type: Double
  units: degrees
  default value: '0'
  enumerated possible values:
  Description: "Surveyed longitude of the Piksi's antenna"
  Notes: This setting represents the longitude of the local Piksi's antenna, expressed
    in decimal degrees relative to the Prime Meridian (east = positive, west = negative).
    If surveyed position "broadcast" is set to "true", the coordinate will be
    communicated to remote Piksis for use in calculating their pseudo-absolute
    RTK position. The value should be as accurate as possible and should have
    precision to at least 7 digits following the decimal point. For reference,
    1e-7 degrees of longitude at 35 degree latitude is about 1 cm.  Any
    errors in the surveyed position will directly affect the pseudo-absolute
    RTK position measurement reported by the remote Piksi.

- group: surveyed_position
  name: surveyed_alt
  type: Double
  units: meters
  default value: '0'
  enumerated possible values:
  Description: "Surveyed altitude of the Piksi's antenna"
  Notes: This setting represents the altitude of the Piksi's antenna above the
    WGS84 ellipsoid, in meters. If surveyed position "broadcast" is set to "true",
    this coordinate will be communicated to remote Piksis for use in calculating
    their pseudo-absolute position. This value should be precise to 1 cm. Any
    errors in the surveyed position will directly affect the pseudo-absolute
    RTK position measurement reported by the Rover.

- group: float_kf
  name: phase_var
  expert: true
  type: Double
  units: cycles^2
  default value: '0.0144'
  enumerated possible values:
  Description: Assumed variance of a satellite's phase measurement
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.

- group: float_kf
  name: code_var
  expert: true
  type: Double
  units: meters^2
  default value: '40000'
  enumerated possible values:
  Description: Assumed variance of a satellite's pseudorange measurement
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.

- group: float_kf
  name: amb_init_var
  expert: true
  type: Double
  units: non dimensional
  default value: '1.00E+25'
  enumerated possible values:
  Description: Initial integer ambiguity variance at filter initialization
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.

- group: float_kf
  name: new_amb_var
  expert: true
  type: Double
  units: non dimensional
  default value: '1.00E+25'
  enumerated possible values:
  Description: Variance for new ambiguity measurements
  Notes: This setting adjusts variance estimates in the Swift Kalman filter which
    aids in integer ambiguity resolution (IAR).  Increasing this value can reduce
    the occurrence of false carrier phase locks but can also increase the time required
    to achieve an IAR fixed solution.  This setting should not be adjusted by end
    users.

- group: frontend
  name: antenna_selection
  type: enum
  units:
  default value: Auto
  enumerated possible values: Auto,Patch,External,External (no bias)
  Description: Determines which antenna to use.
  Notes: This setting selects the antenna input that should be used by the Piksi.  When
    set to "Auto", if the unit senses an external antenna attached to the Piksi
    from a load placed on the antenna output DC bias, it will use the
    external antenna.  If no external antenna is attached (or a passive antenna
    is attached), it will use the integrated patch antenna.  Selecting "Patch"
    or "External" for this setting can override the automatic antenna selection
    and force the external or patch antenna to be used.

- group: iar
  name: phase_var
  expert: true
  type: double
  units: cycles^2
  default value: '0.0144'
  enumerated possible values:
  Description: Determines the measured carrier phase variance for use in the integer
    ambiguity resolution test loop
  Notes: This setting adjusts variance estimates in the integer ambiguity resolution
    (IAR) subroutine.  Increasing this value can reduce the occurrence of false carrier
    phase locks but can also increase the time required to achieve an IAR fixed solution.  This
    setting should not be adjusted by end users.

- group: iar
  name: code_var
  expert: true
  type: double
  units: meters^2
  default value: '40000'
  enumerated possible values:
  Description: Determines the pseudocode variance for the integer ambiguity resolution
    subroutine
  Notes: This setting adjusts variance estimates in the integer ambiguity resolution
    (IAR) subroutine.  Increasing this value can reduce the occurrence of false carrier
    phase locks but can also increase the time required to achieve an IAR fixed solution.  This
    setting should not be adjusted by end users.

- group: openlog
  name: file_prefix
  type: string
  units:
  default value: 'PIKSI'
  enumerated possible values:
  Description: Prefix for OpenLog filenames
  Notes: Filenames are generated by combining the specified prefix string with a unique
    numerical identifier, for example PIKSI001.BIN. Existing filenames will be skipped.

- group: sbp
  name: obs_msg_max_size
  type: integer
  units: bytes
  default value: '102'
  enumerated possible values:
  Description: Determines the maximum message length for raw observation sbp messages.
  Notes: This parameter is useful for tuning observation messages for compatibility
    with radio modems.  Some serial modems will internally split serial packets for
    their protocol and this parameter allows the size of the message to be reduced
    as to prevent the modem from sending multiple packets. If the parameter exceeds
    255 bytes (the maximum size of an SBP message), the Piksi firmware will ignore
    the parameter and use 255 bytes.  If the parameter is set smaller than the size
    of one observation, the Piksi firmware will ignore the parameter and use the size
    of one observation as the maximum message size.

- group: simulator
  name: enabled
  type: boolean
  units:
  default value: 'false'
  enumerated possible values: true,false
  Description: Toggles the Piksi internal simulator on and off
  Notes: The Piksi simulator will provide simulated outputs of a
    stationary base station and the Local Piksi moving in a circle around the
    base station The simulator is intended to aid in system integration by
    providing realistic looking outputs but does not faithfully simulate every
    aspect of device operation.

- group: simulator
  name: base_ecef_x
  type: double
  units: meters
  default value:
  enumerated possible values:
  Description: Simulated base station position
  Notes: Earth centered earth fixed (ECEF) x position of the simulated base station.

- group: simulator
  name: base_ecef_y
  type: double
  units: meters
  default value:
  enumerated possible values:
  Description: Simulated base station position
  Notes: Earth centered earth fixed (ECEF) y position of the simulated base station.

- group: simulator
  name: base_ecef_z
  type: double
  units: meters
  default value:
  enumerated possible values:
  Description: Simulated base station position
  Notes: Earth centered earth fixed (ECEF) z position of the simulated base station.

- group: simulator
  name: speed
  type: double
  units: meters/s
  default value: '4'
  enumerated possible values:
  Description: Simulated tangential speed of Piksi
  Notes:

- group: simulator
  name: radius
  type: double
  units: meters
  default value: '100'
  enumerated possible values:
  Description: Radius of the circle around which the simulated Piksi will move
  Notes:

- group: simulator
  name: pos_sigma
  type: double
  units: meters^2
  default value: '2'
  enumerated possible values:
  Description: Standard deviation of simulated single point position
  Notes:

- group: simulator
  name: speed_sigma
  type: double
  units: meters^2/s^2
  default value: '0.02'
  enumerated possible values:
  Description: Standard deviation of noise addition to simulated tangential speed.
  Notes:

- group: simulator
  name: cn0_sigma
  type: double
  units: dbm hz
  default value: '0.1'
  enumerated possible values:
  Description: Standard deviation of noise added to the simulated signal to noise
    ratio
  Notes:

- group: simulator
  name: pseudorange_sigma
  type: double
  units: meters
  default value: '16'
  enumerated possible values:
  Description: Standard deviation of noise added to the simulated pseudo range
  Notes:

- group: simulator
  name: phase_sigma
  type: double
  units: cycles
  default value: '0.0009'
  enumerated possible values:
  Description: Standard deviation of noise added to the simulated carrier phase
  Notes:

- group: simulator
  name: num_sats
  type: integer
  units:
  default value: '9'
  enumerated possible values:
  Description: The number of satellites for the simulator.
  Notes:

- group: simulator
  name: mode_mask
  type: packed bitfield
  units:
  default value: 15 (decimal), 0xF (hexadecimal)
  enumerated possible values:
  Description: Determines the types of position outputs for the simulator.
  Notes: |
    bit 0 (decimal value 1) turns on single point position PVT simulated outputs
    bit 1 (decimal value 2) turns on the satellite tracking simulated outputs
    bit 2 (decimal value 4) turns on Float IAR simulated RTK outputs
    bit 3 (decimal value 8) turns on Fixed IAR simulated RTK outputs
- group: solution
  name: soln_freq
  type: integer
  units: hz
  default value: '10'
  enumerated possible values:
  Description: The rate at which a solution is generated internally to the Piksi.
  Notes:

- group: solution
  name: output_every_n_obs
  type: integer
  units:
  default value: '2'
  enumerated possible values:
  Description: Integer divisor of solution frequency for which the observations will
    be output.
  Notes: For instance, if the solution frequency is 10 hz, and the "output every n
    obs" parameter is 2, it means that the observation output will occur at a rate
    of 5hz.  Since the observations are the information used by the Piksi receiving
    corrections from the connected Piksi, this determines the rate of information
    sharing for RTK solution output. This parameter is designed to tune the rate at
    which correction information is passed from one Piksi to the other as to efficiently
    use radio modem bandwidth and fit with user applications.
- group: solution
  name: dgnss_solution_mode
  type: enum
  units:
  default value:
  enumerated possible values: Low Latency, Time Matched
  Description: Determines the type of RTK solution which will be output.
  Notes: A "Low Latency" solution uses an internal model of anticipated satellite observations
    to provide RTK output with minimal latency but slightly reduced accuracy.  "Low Latency" mode
    assumes that the base station is stationary. For applications where accuracy is desired over timelieness
    or when both Piksi's are moving, "Time matched" mode can be chosen.  This
    means that the RTK output will require a corresponding set of correction observations
    for each timestamp.
- group: solution
  name: dgnss_filter
  expert: true
  type: enum
  units:
  default value: Fixed
  enumerated possible values: Fixed,Float
  Description: Determines the type of carrier phase ambiguity resolution that the Piksi will attempt to achieve.
  Notes: If "fixed", the Piksi will output a integer fixed ambiguity estimate.  If
    no fixed solution is available, it will revert to the float solution.  If "float",
    the device will only output the float ambiguity estimate.
- group: solution
  name: known_baseline_n
  type: double
  units: meters (north)
  default value: '0'
  enumerated possible values:
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: This sets the number of meters that the rover is North from the
    base station when the "init known baseline" feature is used.
- group: solution
  name: known_baseline_e
  type: double
  units: meters (east)
  default value: '0'
  enumerated possible values:
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: This sets the number of meters that the rover is East from the
    base station when the "init known baseline" feature is used.
- group: solution
  name: known_baseline_d
  type: double
  units: meters (down)
  default value: '0'
  enumerated possible values:
  Description: Determines the baseline vector for the "init known baseline" feature.
  Notes: This sets the number of meters that the rover is Down from the
    base station when the "init known baseline" feature is used.
- group: solution
  name: elevation_mask
  type: float
  units: degrees
  default value: '5'
  enumerated possible values:
  Description: SPP / RTK elevation mask
  Notes: Satellites must be above the horizon by at least this angle before they
    will be used in a solution.
- group: solution
  name: disable_raim
  type: boolean
  expert: true
  units:
  default value: False
  enumerated possible values: True,False
  Description: Receiver Autonomous Integrity Monitoring
  Notes: If True, RAIM checks will not be performed.
- group: solution
  name: send_heading
  type: boolean
  expert: true
  units:
  default value: False
  enumerated possible values: True,False
  Description: Enables SBP heading output.  Heading is caculated from base station to 
    rover and represents the inverse tangent of the north and east components of the baseline.
  Notes: No smoothing or additional processing is provided to improve heading output.
- group: system_info
  name: serial_number
  type: integer
  units:
  default value:
  enumerated possible values:
  Description: The serial number of the Piksi
  Notes: This number should match the number on the barcode and cannot be modified
- group: system_info
  name: firmware_version
  type: string
  units:
  default value:
  enumerated possible values:
  Description: Indicates the firmware version for the Local Piksi
  Notes: 'For user generated firmware, this information will appear the same as the
    git command: "git describe --dirty"'

- group: system_info
  name: firmware_built
  type: string
  units:
  default value:
  enumerated possible values:
  Description: Date of firmware build
  Notes:

- group: system_info
  name: hw_revision
  type: string
  units:
  default value:
  enumerated possible values:
  Description: hardware revision for Piksi
  Notes:

- group: system_info
  name: nap_version
  type: integer
  units:
  default value:
  enumerated possible values:
  Description: Version of the SwiftNAP FPGA firmware.
  Notes:

- group: system_info
  name: nap_channels
  type: integer
  units:
  default value:
  enumerated possible values:
  Description: Number of tracking channels in the SwiftNAP firmware
  Notes:

- group: system_info
  name: nap_fft_index_bits
  type:
  units:
  default value:
  enumerated possible values:
  Description: Number of bits to represent the result of fast fourier transform in
    SwiftNAP firmware
  Notes:

- group: system_monitor
  name: heartbeat_period_milliseconds
  type: integer
  units:
  default value:
  enumerated possible values:
  Description: Period for sending the SBP_HEARTBEAT messages
  Notes:

- group: system_monitor
  name: watchdog
  type: boolean
  units:
  default value: 'true'
  enumerated possible values: true,false
  Description: Enable hardware watchdog timer to reset the Piksi if it locks up for
    any reason.
  Notes: You must reset the Piksi for changes to this setting to take effect.

- group: telemetry_radio
  name: configuration_string
  type: string
  units: 
  default value:
  enumerated possible values:
  Description: Configuration string to send radio modem over UART when detected
  Notes: |
         This configuration string is intended for radios that use AT style commands
         ATS1 = Serial Baud Rate 
         ATS2 = Air Speed
         ATS3 = Net ID
         ATS4 = TX Power
         ATS5 = Error Correction
         ATS8 = Minimum Frequency
         ATS9 = Maximum Frequency
         ATS15 = Node ID 
- group: uart_ftdi
  name: mode
  type: enum
  units:
  default value: SBP
  enumerated possible values: SBP,NMEA,RTCM
  Description: Configure mode for USB serial port on Piksi
  Notes:

- group: uart_ftdi
  name: sbp_message_mask
  type: integer
  units:
  default value: 65535 (decimal), 0xFFFF (hex)
  enumerated possible values:
  Description: Configure the message mask for SBP messages on the UART for the USB
    port on Piksi
  Notes: 'The message mask is bitwise anded to the message identifier for a particular
    message.  If the result is non-zero, the message will be sent over this UART.
    For example, consider the Piksi firmware sending an SBP
    message with ID 0x0041. If UART A has mask "64" (0x0040),
    The SBP subsystem bitwise-ands the message id with the UART A mask giving the result
    of 0x0040. Since the result is non-zero, the message is valid for UART A and is sent.
    Practically, the UART with mask 64 (0x0040) transmits
    only RTK observation data and the USART with mask 65280 (0xFF00) transmits
    most messages of interest to the host system (such as position and velocity).
    A mask of 0xFFFF will transmit all messages at the expense of bandwidth.'

- group: uart_ftdi
  name: baudrate
  type: integer
  units: baud
  default value: '1000000'
  enumerated possible values:
  Description: The baudrate for the UART for the USB port on Piksi
  Notes:

- group: uart_ftdi
  name: fwd_msg
  type: boolean
  units: 
  default value: 'true'
  enumerated possible values: true, false
  Description: Enable forwarding of base station messages
  Notes:

- group: uart_uarta
  name: mode
  type: enum
  units:
  default value: SBP
  enumerated possible values: SBP,NMEA,RTCM
  Description: Configure mode for UART
  Notes:

- group: uart_uarta
  name: sbp_message_mask
  type: integer
  units:
  default value: 64 (decimal), 0x0040 (hex)
  enumerated possible values:
  Description: Configure the message mask for SBP messages on UART
  Notes: The default message mask on this UART (0x0040) is appropriate
    for a radio to communicate observation messages to another Piksi.  The
    out-of-the box configuration uses UART A for Piksi to Piksi communication.

- group: uart_uarta
  name: configure_telemetry_radio_on_boot
  type: boolean
  units:
  default value: 'TRUE'
  enumerated possible values: true,false
  Description: Determines whether this UART will attempt to configure a telemetry
    radio upon boot
  Notes: If a telemetry radio is connected to this UART, this should be set to true
    in order to send the configuration string to the radio.

- group: uart_uarta
  name: openlog_enable
  type: boolean
  units:
  default value: 'TRUE'
  enumerated possible values: true,false
  Description: Determines whether this UART will attempt to configure an OpenLog

- group: uart_uarta
  name: baudrate
  type: integer
  units: baud
  default value: '57600'
  enumerated possible values:
  Description: The baudrate for the UART
  Notes: The radio baudrate may be constrained by the particular RF equipment used
    for the telemetry radio.

- group: uart_uarta
  name: fwd_msg
  type: boolean
  units: 
  default value: 'false'
  enumerated possible values: true, false
  Description: Enable forwarding of base station messages
  Notes:

- group: uart_uartb
  name: mode
  type: enum
  units:
  default value: SBP
  enumerated possible values: SBP,NMEA,RTCM
  Description: Configure mode for UART

- group: uart_uartb
  name: sbp_message_mask
  type: integer
  units:
  default value: 65280 (decimal), 0xFF00 (hex)
  enumerated possible values:
  Description: Configure the message mask for SBP messages on UART
  Notes: The default message mask on this uart (0xFF00) is appropriate for a general purpose interface to the Piksi.

- group: uart_uartb
  name: configure_telemetry_radio_on_boot
  type: boolean
  units:
  default value: 'TRUE'
  enumerated possible values: true,false
  Description: Determines whether this UART will attempt to configure a telemetry
    radio upon boot
  Notes: If a telemetry radio is connected to this UART, this should be set to true
    in order to send the configuration string to the radio.

- group: uart_uartb
  name: openlog_enable
  type: boolean
  units:
  default value: 'TRUE'
  enumerated possible values: true,false
  Description: Determines whether this UART will attempt to configure an OpenLog

- group: uart_uartb
  name: baudrate
  type: integer
  units: baud
  default value: '115200'
  enumerated possible values:
  Description: The baudrate for the uart
  Notes:

- group: uart_uartb
  name: fwd_msg
  type: boolean
  units: 
  default value: 'false'
  enumerated possible values: true, false
  Description: Enable forwarding of base station messages
  Notes:

- group: ext_events
  name: edge_trigger
  type: enum
  units:
  default value: None
  enumerated possible values: None,Rising,Falling,Both
  Description: Select DEBUG0 edges to trigger timestamped event capture.
  Notes: You can use this to record the exact time that some external
    event in your system occurred, e.g. camera shutter time.  Upon
    detecting the event, Piksi will generate a MSG_EXT_EVENT message
    reporting the event, including a timestamp accurate to better than
    a microsecond.
    Requires NAP firmware >= 0.12.

- group: track
  name: iq_output_mask
  expert: true
  type: integer
  units:
  default value: 0
  enumerated possible values:
  Description: Output raw I/Q correlations
  Notes: Bitmask of channel IDs (not PRNs)

- group: track
  name: cn0_drop
  expert: true
  type: Double
  units: db-Hz
  default value: '30'
  Description: C/N0 threshold for tracking.
  Notes: If the estimated C/N0 for a satellite drops below this for more than
         5 seconds, the signal will be considered lost and the channel reset.

- group: track
  name: cn0_use
  expert: true
  type: Double
  units: db-Hz
  default value: '31'
  Description: C/N0 threshold for navigation.
  Notes: If the estimated C/N0 drops below this even momentarily,
         the satellite will not be used for SPP or RTK solutions and
         the integer ambiguity for that channel will be reinitialized.
         This is in addition to PLL lock detection.

- group: track
  name: loop_params
  expert: true
  type: string
  units:
  default value: '(1 ms, (1, 0.7, 1, 1540), (10, 0.7, 1, 5)), (5 ms, (1, 0.7, 1, 1540), (50, 0.7, 1, 0))'
  Description: Tracking loop filter parameters
  Notes: "'<LOOP_PARAMS_STAGE1>[, <LOOP_PARAMS_STAGE2>]'
    where <LOOP_PARAMS_STAGEn> =
    (<COHERENT_MS> ms, (CODE_BW, CODE_ZETA, CODE_K, CARR_TO_CODE),
                       (CARR_BW, CARR_ZETA, CARR_K, FLL_AID_GAIN))
    LOOP_PARAMS_STAGE1 will be used until navigation bit synchronization
    is achieved, after which LOOP_PARAMS_STAGE2 will be used.
    COHERENT_MS must be a factor of 20, and must be 1 for LOOP_PARAMS_STAGE1.
    CARR_TO_CODE should be 0 (carrier aiding disabled) or 1540 (ratio of
    GPS L1 C/A carrier freq to code freq)."

- group: track
  name: lock_detect_params
  expert: true
  type: string
  units:
  default value: '0.02, 1.4, 150, 50'
  Description: PLL lock detector parameters
  Notes: "<k1>, <k2>, <lp>, <lo>
    where
      k1 = LPF coefficient (@ 1 ms)
      k2 = I arm divisor
      lp = Pessimistic lock count threshold
      lo = Optimistic lock count threshold"

- group: track
  name: alias_detect
  expert: true
  type: boolean
  units:
  default value: 'True'
  enumerated possible values: True,False
  Description: Use phase-lock alias detection + correction
  Notes:

- group: nmea
  name: gpgsv_msg_rate
  type: integer
  units: Ticks
  default value: '10'
  Description: Number of ticks between GPGSV NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gprmc_msg_rate
  type: integer
  units: Ticks
  default value: '10'
  Description: Number of ticks between GPRMC NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gpvtg_msg_rate
  type: integer
  units: Ticks
  default value: '10'
  Description: Number of ticks between GPVTG NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5hz.  If this setting is 0, the msg will be suppressed.

- group: nmea
  name: gpgll_msg_rate
  type: integer
  units: Ticks
  default value: '10'
  Description: Number of ticks between GPGLL NMEA messages being sent.
  Notes: This setting represents the integer number of solution periods between each transmission of the NMEA message. For example, if the solution rate is 10hz, and this rate setting is 2, the NMEA message will be sent every two solution epochs at a rate of 5hz.  If this setting is 0, the msg will be suppressed.
  
- group: nmea
  name: gpzda_msg_rate
  type: integer
  units: Ticks
  default value: '10'
  enumerated possible values:
  Description: Number of ticks between GPZDA NMEA messages being sent.
  Notes:

- group: nmea
  name: gpgsa_msg_rate
  type: integer
  units: Ticks
  default value: '10'
  enumerated possible values:
  Description: Number of ticks between GPGSA NMEA messages being sent.
  Notes:

- group: pps
  name: width
  type: integer
  units: microseconds
  default value: '200000'
  enumerated possible values:
  Description: Number of microseconds the PPS will remain high (1-999999).
  Notes:

- group: acquisition
  name: sbas enabled
  type: boolean
  units:
  default value: 'false'
  enumerated possible values: true,false
  Description: Enable the SBAS constellation
  Notes: 